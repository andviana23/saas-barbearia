const { execSync } = require('child_process');
const path = require('path');

/**
 * Helper para executar migra√ß√£o manual no Supabase Dashboard
 */
function openManualMigrationHelper() {
  console.log('üöÄ HELPER DE MIGRA√á√ÉO MANUAL - FASE 3 FINAL');
  console.log('===========================================\n');

  console.log('üìã SITUA√á√ÉO ATUAL:');
  console.log('   ‚úÖ Tabelas em ingl√™s existem (units, customers, etc.)');
  console.log('   ‚ùå Colunas ainda est√£o em portugu√™s');
  console.log('   üéØ NECESS√ÅRIO: Renomear colunas PT ‚Üí EN');

  console.log('\nüîß ETAPAS PARA COMPLETAR A MIGRA√á√ÉO:');
  console.log('====================================\n');

  // Passo 1: Abrir Dashboard
  console.log('üìå PASSO 1: Abrir Supabase Dashboard');
  console.log('   üåê URL: https://supabase.com/dashboard');
  console.log('   üìÇ Projeto: saas-barbearia');
  console.log('   üîß Navegar: SQL Editor > New Query');

  // Passo 2: Script espec√≠fico para colunas
  console.log('\nüìå PASSO 2: Copiar e executar script de colunas');
  console.log('   üìÑ Executar apenas a ETAPA 4 de migration_pt_to_en.sql:');

  const columnScript = `-- ================================================================================
-- MIGRA√á√ÉO DE COLUNAS PT ‚Üí EN (SOMENTE ETAPA 4)
-- Execute este script no SQL Editor do Supabase
-- ================================================================================

BEGIN;

-- 4.1 Tabela units (ex-unidades)
ALTER TABLE public.units RENAME COLUMN nome TO name;
ALTER TABLE public.units RENAME COLUMN cnpj TO tax_id;
ALTER TABLE public.units RENAME COLUMN endereco TO address;
ALTER TABLE public.units RENAME COLUMN telefone TO phone;
ALTER TABLE public.units RENAME COLUMN ativo TO active;

-- 4.2 Tabela profiles (j√° est√° correta)
ALTER TABLE public.profiles RENAME COLUMN nome TO name;
ALTER TABLE public.profiles RENAME COLUMN telefone TO phone;
ALTER TABLE public.profiles RENAME COLUMN unidade_default_id TO unit_default_id;
ALTER TABLE public.profiles RENAME COLUMN ativo TO active;

-- 4.3 Tabela professionals (ex-profissionais)
ALTER TABLE public.professionals RENAME COLUMN nome TO name;
ALTER TABLE public.professionals RENAME COLUMN papel TO role;
ALTER TABLE public.professionals RENAME COLUMN comissao_regra TO commission_rule;
ALTER TABLE public.professionals RENAME COLUMN unidade_id TO unit_id;
ALTER TABLE public.professionals RENAME COLUMN ativo TO active;

-- 4.4 Tabela customers (ex-clientes)
ALTER TABLE public.customers RENAME COLUMN nome TO name;
ALTER TABLE public.customers RENAME COLUMN telefone TO phone;
ALTER TABLE public.customers RENAME COLUMN preferencias TO preferences;
ALTER TABLE public.customers RENAME COLUMN unidade_id TO unit_id;
ALTER TABLE public.customers RENAME COLUMN ativo TO active;

-- 4.5 Tabela services (ex-servicos)
ALTER TABLE public.services RENAME COLUMN nome TO name;
ALTER TABLE public.services RENAME COLUMN categoria TO category;
ALTER TABLE public.services RENAME COLUMN preco TO price_cents;
ALTER TABLE public.services RENAME COLUMN duracao_min TO duration_minutes;
ALTER TABLE public.services RENAME COLUMN categoria_id TO category_id;
ALTER TABLE public.services RENAME COLUMN unidade_id TO unit_id;
ALTER TABLE public.services RENAME COLUMN ativo TO active;

-- 4.6 Tabela appointments
ALTER TABLE public.appointments RENAME COLUMN cliente_id TO customer_id;
ALTER TABLE public.appointments RENAME COLUMN profissional_id TO professional_id;
ALTER TABLE public.appointments RENAME COLUMN unidade_id TO unit_id;
ALTER TABLE public.appointments RENAME COLUMN inicio TO start_time;
ALTER TABLE public.appointments RENAME COLUMN fim TO end_time;
ALTER TABLE public.appointments RENAME COLUMN total TO total_cents;
ALTER TABLE public.appointments RENAME COLUMN notas TO notes;

-- 4.7 Tabela queue (ex-fila)
ALTER TABLE public.queue RENAME COLUMN posicao TO position;
ALTER TABLE public.queue RENAME COLUMN estimativa_min TO estimated_wait_minutes;
ALTER TABLE public.queue RENAME COLUMN prioridade TO priority;
ALTER TABLE public.queue RENAME COLUMN unidade_id TO unit_id;
ALTER TABLE public.queue RENAME COLUMN cliente_id TO customer_id;

COMMIT;

-- Verifica√ß√£o final
SELECT 'Migra√ß√£o de colunas conclu√≠da!' as status;`;

  console.log('\nüìÑ SCRIPT PARA COPIAR E COLAR:');
  console.log('================================\n');
  console.log(columnScript);

  // Passo 3: Abrir automaticamente
  console.log('\nüìå PASSO 3: Tentar abrir automaticamente');
  try {
    console.log('   üåê Abrindo browser...');
    const command =
      process.platform === 'win32' ? 'start' : process.platform === 'darwin' ? 'open' : 'xdg-open';
    execSync(`${command} https://supabase.com/dashboard`);
    console.log('   ‚úÖ Dashboard aberto no browser');
  } catch (error) {
    console.log('   ‚ö†Ô∏è  N√£o foi poss√≠vel abrir automaticamente');
    console.log('   üìã Abra manualmente: https://supabase.com/dashboard');
  }

  console.log('\nüìã CHECKLIST EXECU√á√ÉO:');
  console.log('======================');
  console.log('[ ] 1. Dashboard Supabase aberto');
  console.log('[ ] 2. SQL Editor > New Query');
  console.log('[ ] 3. Script colado na query');
  console.log('[ ] 4. Executar com "Run"');
  console.log('[ ] 5. Verificar sucesso');
  console.log('[ ] 6. Confirmar: "Migra√ß√£o de colunas conclu√≠da!"');

  console.log('\nüéØ AP√ìS EXECU√á√ÉO:');
  console.log('   üìã Fase 3 estar√° 100% completa');
  console.log('   üöÄ Prosseguir para Fase 4: C√≥digo da aplica√ß√£o');

  console.log('\n‚ö†Ô∏è  IMPORTANTE:');
  console.log('   ‚Ä¢ Se houver erro de "coluna j√° existe", est√° OK');
  console.log('   ‚Ä¢ Focar na mensagem final de sucesso');
  console.log('   ‚Ä¢ Backup j√° foi feito anteriormente');
}

// Salvar script em arquivo separado
function createColumnMigrationScript() {
  const fs = require('fs');
  const scriptPath = path.join(__dirname, 'column_migration_only.sql');

  const script = `-- ================================================================================
-- MIGRA√á√ÉO DE COLUNAS PT ‚Üí EN (SOMENTE ETAPA 4)
-- Execute este script no SQL Editor do Supabase
-- Data: ${new Date().toISOString().split('T')[0]}
-- ================================================================================

BEGIN;

-- 4.1 Tabela units (ex-unidades) 
ALTER TABLE public.units RENAME COLUMN nome TO name;
ALTER TABLE public.units RENAME COLUMN cnpj TO tax_id;
ALTER TABLE public.units RENAME COLUMN endereco TO address;
ALTER TABLE public.units RENAME COLUMN telefone TO phone;
ALTER TABLE public.units RENAME COLUMN ativo TO active;

-- 4.2 Tabela profiles
ALTER TABLE public.profiles RENAME COLUMN nome TO name;
ALTER TABLE public.profiles RENAME COLUMN telefone TO phone;
ALTER TABLE public.profiles RENAME COLUMN unidade_default_id TO unit_default_id;
ALTER TABLE public.profiles RENAME COLUMN ativo TO active;

-- 4.3 Tabela professionals (ex-profissionais)
ALTER TABLE public.professionals RENAME COLUMN nome TO name;
ALTER TABLE public.professionals RENAME COLUMN papel TO role;
ALTER TABLE public.professionals RENAME COLUMN comissao_regra TO commission_rule;
ALTER TABLE public.professionals RENAME COLUMN unidade_id TO unit_id;
ALTER TABLE public.professionals RENAME COLUMN ativo TO active;

-- 4.4 Tabela customers (ex-clientes)
ALTER TABLE public.customers RENAME COLUMN nome TO name;
ALTER TABLE public.customers RENAME COLUMN telefone TO phone;
ALTER TABLE public.customers RENAME COLUMN preferencias TO preferences;
ALTER TABLE public.customers RENAME COLUMN unidade_id TO unit_id;
ALTER TABLE public.customers RENAME COLUMN ativo TO active;

-- 4.5 Tabela services (ex-servicos)
ALTER TABLE public.services RENAME COLUMN nome TO name;
ALTER TABLE public.services RENAME COLUMN categoria TO category;
ALTER TABLE public.services RENAME COLUMN preco TO price_cents;
ALTER TABLE public.services RENAME COLUMN duracao_min TO duration_minutes;
ALTER TABLE public.services RENAME COLUMN categoria_id TO category_id;
ALTER TABLE public.services RENAME COLUMN unidade_id TO unit_id;
ALTER TABLE public.services RENAME COLUMN ativo TO active;

-- 4.6 Tabela appointments
ALTER TABLE public.appointments RENAME COLUMN cliente_id TO customer_id;
ALTER TABLE public.appointments RENAME COLUMN profissional_id TO professional_id;
ALTER TABLE public.appointments RENAME COLUMN unidade_id TO unit_id;
ALTER TABLE public.appointments RENAME COLUMN inicio TO start_time;
ALTER TABLE public.appointments RENAME COLUMN fim TO end_time;
ALTER TABLE public.appointments RENAME COLUMN total TO total_cents;
ALTER TABLE public.appointments RENAME COLUMN notas TO notes;

-- 4.7 Tabela queue (ex-fila)
ALTER TABLE public.queue RENAME COLUMN posicao TO position;
ALTER TABLE public.queue RENAME COLUMN estimativa_min TO estimated_wait_minutes;
ALTER TABLE public.queue RENAME COLUMN prioridade TO priority;
ALTER TABLE public.queue RENAME COLUMN unidade_id TO unit_id;
ALTER TABLE public.queue RENAME COLUMN cliente_id TO customer_id;

COMMIT;

-- Verifica√ß√£o final
SELECT 'Migra√ß√£o de colunas conclu√≠da com sucesso!' as status;

-- ================================================================================
-- FIM DA MIGRA√á√ÉO DE COLUNAS
-- ================================================================================`;

  fs.writeFileSync(scriptPath, script);
  console.log(`\nüìÑ Script salvo em: ${scriptPath}`);
  console.log('üìã Use este arquivo como refer√™ncia');
}

/**
 * Fun√ß√£o principal
 */
function main() {
  openManualMigrationHelper();
  createColumnMigrationScript();

  console.log('\nüéØ RESUMO:');
  console.log('==========');
  console.log('‚úÖ Helper executado');
  console.log('‚úÖ Script criado: column_migration_only.sql');
  console.log('üåê Dashboard deveria estar aberto');
  console.log('üìã Siga o checklist acima');
  console.log('\nüöÄ Boa sorte na execu√ß√£o final!');
}

if (require.main === module) {
  main();
}
